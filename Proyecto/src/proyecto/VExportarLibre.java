/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author AitorBM
 */
public class VExportarLibre extends javax.swing.JFrame {

    private Connection conn;
    private int n = 0;
    private List<Pregunta> pre = new ArrayList<>();
    private List<Respuesta> res = new ArrayList<>();
    private VP padre;

    private void actualizarRespuestas(Pregunta p) throws SQLException {
        Statement stmt = conn.createStatement();
        ResultSet rset = stmt.executeQuery("select * from respuestas where preguntas_id_pre = " + p.getId());
        while (rset.next()) {
            Respuesta r = new Respuesta();
            r.setId(Integer.parseInt(rset.getString(1)));
            r.setTexto(rset.getString(2));
            r.setCorrecta(rset.getInt(3));
            r.setPregunta(p);
            res.add(r);

            p.getRespuestas().add(r);
        }
        stmt.close();
    }

    /**
     * Creates new form VExpotarLibre
     */
    public VExportarLibre(VP vp) throws SQLException, ClassNotFoundException {
        padre = vp;
        
        initComponents();

        /*
        DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
        //Conexion maquina vagrant
        conn = DriverManager.getConnection("jdbc:oracle:thin:@10.10.10.9:1521:db12102", "system", "oracle");
        Conexion server egibide -> conn = DriverManager.getConnection("jdbc:oracle:thin:@SrvOracle:1521:orcl", "noc08", "noc08");
        Conexion en mi casa -> conn = DriverManager.getConnection("jdbc:oracle:thin:@192.168.2.2:1521:orcl", "SYSTEM", "root");
        */
        
        Class.forName("com.mysql.jdbc.Driver");
            
            // Cadena de conexión
            String bd = "scotchbox";
            String login = "root";
            String password = "root";
            String url = "jdbc:mysql://192.168.33.10:3306/" + bd;

            // Establecimiento de conexión
            conn = DriverManager.getConnection(url, login, password);

            // [2] Consulta
        System.out.println("INFO: Conexión abierta");

        Statement stmt = conn.createStatement();
        ResultSet rset = stmt.executeQuery("select * from preguntas");
        while (rset.next()) {
            Pregunta p = new Pregunta();
            p.setId(Integer.parseInt(rset.getString(1)));
            p.setTexto(rset.getString(2));
            actualizarRespuestas(p);
            pre.add(p);
        }
        stmt.close();

        jtfID.setText(String.valueOf(pre.get(n).getId()));
        jtfPregunta.setText(pre.get(n).getTexto());
        jtaRespuestas.setText("");
        jtfID.setEditable(false);
        jtfPregunta.setEditable(false);
        jtaRespuestas.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfPregunta = new javax.swing.JTextField();
        jbAtras = new javax.swing.JButton();
        jbAlante = new javax.swing.JButton();
        jbAnadir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaRespuestas = new javax.swing.JTextArea();
        jbExportar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Añade las preguntas que quieras exportar.");

        jbAtras.setText("<");
        jbAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtrasActionPerformed(evt);
            }
        });

        jbAlante.setText(">");
        jbAlante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlanteActionPerformed(evt);
            }
        });

        jbAnadir.setText("Añadir");
        jbAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnadirActionPerformed(evt);
            }
        });

        jtaRespuestas.setColumns(20);
        jtaRespuestas.setRows(5);
        jScrollPane1.setViewportView(jtaRespuestas);

        jbExportar.setText("Exportar");
        jbExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExportarActionPerformed(evt);
            }
        });

        jLabel2.setText("ID");

        jLabel3.setText("Pregunta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbExportar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 273, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbAtras)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfPregunta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbAlante))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbAnadir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAtras)
                    .addComponent(jbAlante)
                    .addComponent(jLabel2)
                    .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAnadir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbExportar)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtrasActionPerformed
        // TODO add your handling code here:
        if (n > 0) {
            n -= 1;
            jtfID.setText(String.valueOf(pre.get(n).getId()));
            jtfPregunta.setText(pre.get(n).getTexto());
        }
    }//GEN-LAST:event_jbAtrasActionPerformed

    private void jbAlanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlanteActionPerformed
        // TODO add your handling code here:
        if (n < pre.size() - 1) {
            n += 1;
            jtfID.setText(String.valueOf(pre.get(n).getId()));
            jtfPregunta.setText(pre.get(n).getTexto());
        }
    }//GEN-LAST:event_jbAlanteActionPerformed

    private void jbAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnadirActionPerformed
        // TODO add your handling code here:
        Pregunta pElegida = pre.get(n);
        String texto = pElegida.getTexto() + "\n{\n";
        for (Respuesta r : pElegida.getRespuestas()) {
            String res = "";
            if (r.getCorrecta() == 0) {
                res += "~" + r.getTexto() + "\n";
            } else {
                res += "=" + r.getTexto() + "\n";
            }
            texto += res;
        }
        jtaRespuestas.setText(jtaRespuestas.getText() + texto + "}\n\n");
    }//GEN-LAST:event_jbAnadirActionPerformed

    private void jbExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExportarActionPerformed
        // TODO add your handling code here:
        JFileChooser explorador = new JFileChooser();

        byte buffer[] = jtaRespuestas.getText().getBytes();
        FileOutputStream f0 = null;
        explorador.setVisible(true);
        try {
            f0 = new FileOutputStream("../PreguntasLibre" + padre.getExportadosLib() + ".gift");
            f0.write(buffer);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(VExportarCat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VExportarCat.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (f0 != null) {
                f0.close();
                padre.setExportadosLib(padre.getExportadosLib()+1);
            }
            JOptionPane.showMessageDialog(this, "Pregunta/s exportada/s correctamente\nen la carpeta que contiene el proyecto.");
        } catch (IOException e) {
            System.out.println("ERROR: No se puede cerrar f1.txt");
            JOptionPane.showMessageDialog(this, "No se ha/n podido exportar correctamente las preguntas.ñ");
        }
        this.dispose();
    }//GEN-LAST:event_jbExportarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlante;
    private javax.swing.JButton jbAnadir;
    private javax.swing.JButton jbAtras;
    private javax.swing.JButton jbExportar;
    private javax.swing.JTextArea jtaRespuestas;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfPregunta;
    // End of variables declaration//GEN-END:variables
}
